plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

project.ext.lwjglVersion = "3.2.2"
project.ext.lwjglNatives = "natives-windows"

repositories {
    jcenter()
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    gradlePluginPortal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

//minecraft {
//    accessWidener file("src/main/resources/fabri_vr.accesswidener")
//}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "org.lwjgl:lwjgl-ovr:$lwjglVersion"
    implementation "org.lwjgl:lwjgl-openvr"
    implementation "org.lwjgl:lwjgl-ovr:$lwjglVersion:$lwjglNatives"
    implementation "org.lwjgl:lwjgl-openvr::$lwjglNatives"

//    implementation 'com.github.java-graphics:openvr:756fe5315b'
//    compile 'com.github.kotlin-graphics:openvr:41552f527ccf414bd44e54c16cd8b04cddf5c48d'
//    compile 'com.github.kotlin-graphics:uno-sdk:9b180ad3940abdc2e706b115d48a270202c11a3a'

    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-reflect
//    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.4.30-M1'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}